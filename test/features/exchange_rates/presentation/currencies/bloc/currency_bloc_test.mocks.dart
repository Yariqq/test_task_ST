// Mocks generated by Mockito 5.0.16 from annotations
// in test_app_st_my/test/features/exchange_rates/presentation/currencies/bloc/currency_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_app_st_my/features/exchange_rates/domain/entities/currency.dart'
    as _i5;
import 'package:test_app_st_my/features/exchange_rates/domain/repositories/exchange_rates_repository.dart'
    as _i2;
import 'package:test_app_st_my/features/exchange_rates/domain/usecases/get_all_currencies.dart'
    as _i3;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeExchangeRatesRepository_0 extends _i1.Fake
    implements _i2.ExchangeRatesRepository {}

/// A class which mocks [GetAllCurrencies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAllCurrencies extends _i1.Mock implements _i3.GetAllCurrencies {
  MockGetAllCurrencies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ExchangeRatesRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeExchangeRatesRepository_0())
          as _i2.ExchangeRatesRepository);
  @override
  _i4.Future<List<_i5.Currency>> call(_i3.NoParams? params) =>
      (super.noSuchMethod(Invocation.method(#call, [params]),
              returnValue: Future<List<_i5.Currency>>.value(<_i5.Currency>[]))
          as _i4.Future<List<_i5.Currency>>);
  @override
  String toString() => super.toString();
}
