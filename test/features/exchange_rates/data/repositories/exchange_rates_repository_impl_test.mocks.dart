// Mocks generated by Mockito 5.0.16 from annotations
// in test_app_st_my/test/features/exchange_rates/data/repositories/exchange_rates_repository_impl_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_app_st_my/features/exchange_rates/data/datasources/exchange_rates_local_data_source.dart'
    as _i5;
import 'package:test_app_st_my/features/exchange_rates/data/datasources/exchange_rates_remote_data_source.dart'
    as _i2;
import 'package:test_app_st_my/features/exchange_rates/data/models/currency_model.dart'
    as _i4;
import 'package:test_app_st_my/features/exchange_rates/data/models/currency_settings_model.dart'
    as _i6;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

/// A class which mocks [ExchangeRatesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockExchangeRatesRemoteDataSource extends _i1.Mock
    implements _i2.ExchangeRatesRemoteDataSource {
  MockExchangeRatesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.CurrencyModel>> getAllCurrencies() =>
      (super.noSuchMethod(Invocation.method(#getAllCurrencies, []),
              returnValue:
                  Future<List<_i4.CurrencyModel>>.value(<_i4.CurrencyModel>[]))
          as _i3.Future<List<_i4.CurrencyModel>>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [ExchangeRatesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockExchangeRatesLocalDataSource extends _i1.Mock
    implements _i5.ExchangeRatesLocalDataSource {
  MockExchangeRatesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i6.CurrencySettingsModel>> getCurrencies() =>
      (super.noSuchMethod(Invocation.method(#getCurrencies, []),
              returnValue: Future<List<_i6.CurrencySettingsModel>>.value(
                  <_i6.CurrencySettingsModel>[]))
          as _i3.Future<List<_i6.CurrencySettingsModel>>);
  @override
  _i3.Future<void> cacheCurrencies(List<_i6.CurrencySettingsModel>? settings) =>
      (super.noSuchMethod(Invocation.method(#cacheCurrencies, [settings]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
